@{
    Layout = "~/Views/Shared/_Layout_SkdSidebar.cshtml";
    ViewBag.Title = "Daily Statistics";
    ViewBag.SubTitle = "For full statistics visit <a href='/Daily/Stat'>the statistics page</a>.";
    ViewBag.Icon = "charging-station";
}
@section scripts {
    <script>
        $(function (e) {
            skd_sidebar_set_active_tab($("[tab-id=1]"));
        });
    </script>
}
<nav class="nav nav-tabs">
    <a class="nav-link btn-sm btn-secondary" tab-id="1">Daily</a>
    <a class="nav-link btn-sm btn-secondary" tab-id="2">Top 5's</a>
</nav>
<div class="skd-tabs">
    <div id="sidebarTab1" class="skd-tab skd-table">
        @foreach (var item in Common.User.Stat.Overview().OrderBy(x => x.typeTitle).ThenBy(x => x.optionTitle))
        {
            bool isGrouped = Common.User.Stat.Overview().Count(x => x.typeId == item.typeId) > 1;

            if (!item.optionId.HasValue && isGrouped)
            {
                var tmp = Common.User.Stat.RetrieveAsOptionGroup(item.typeId);
                <div class="d-flex skd-table-row skd-table-row-header">
                    <div class="col-1">@item.TypeIcon()</div>
                    <div class="col text-truncate">@tmp.typeTitle@(tmp.optionId.HasValue ? ", " + tmp.optionTitle : "")</div>
                    <div class="col-auto text-end">@tmp.qty24h</div>
                    <div class="col-1 text-end">@tmp.qtyMidnight</div>
                    <div class="col-1 text-end">@tmp.qtyMorning</div>
                </div>
            }
            <div class="d-flex skd-table-row@(isGrouped ? "" : " skd-table-row-header")">
                <div class="col-1">@(isGrouped ? new HtmlString("") : item.TypeIcon())</div>
                <div class="col text-truncate">@item.typeTitle@(item.optionId.HasValue ? ", " + item.optionTitle : "")</div>
                <div class="col-auto text-end">@item.qty24h</div>
                <div class="col-1 text-end">@item.qtyMidnight</div>
                <div class="col-1 text-end">@item.qtyMorning</div>
            </div>
        }
    </div>
    <div id="sidebarTab2" class="skd-tab skd-table">
        @{
            var listOfStatTypes = new[] { 9007, 1500, 9503, 1011, 1049 };
            List<Daily> dailyStats = new List<Daily>();

            using (var db = new Db())
            {
                foreach (var t in listOfStatTypes)
                {
                    dailyStats.AddRange(
                        db.Daily
                            .Include("DailyType")
                            .Where(x => x.typeId == t && x.createUserId == Common.User.userId)
                            .OrderByDescending(x => x.registerDateTime)
                            .Take(5)
                    );
                }
            }
            int lastTypeId = -1;
            int rowNo = 1;
        }
        @foreach (var item in dailyStats.OrderBy(x => x.DailyType.internalTitle).ThenByDescending(x => x.registerDateTime))
        {
            if (lastTypeId != item.typeId) { rowNo = 1; }
            <div class="d-flex skd-table-row" data-type-id="@item.typeId" data-row-no="@rowNo">
                <div class="col-1">@item.DailyType.Icon()</div>
                <div class="col text-truncate">@item.DailyType.internalTitle</div>
                <div class="col-auto">@(item.registerDateTime.ToDayHM().StartsWith("0d") ? item.registerDateTime.ToHM() : item.registerDateTime.ToDayHM())</div>
            </div>
            lastTypeId = item.typeId;
            rowNo++;
        }
    </div>
</div>