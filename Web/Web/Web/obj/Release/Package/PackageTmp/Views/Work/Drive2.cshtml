@model Work
@{
    Layout = "~/Views/Shared/_Layout_Empty.cshtml";
    ViewBag.Title = "Beta Drive";

    WorkTask rowPrev = null;
}
<style>
    .sdt {
        color: var(--bs-success);
    }

    .edt {
        color: var(--bs-danger);
    }
</style>
<div class="d-flex" style="height: 100vh; max-height: 100vh;">
    <div id="task-info" class="col-4 d-flex flex-column p-0">
        <h1>Testing</h1>
        <a href="https://stig-2021/Work/Drive2/d0bb89c4-784a-445d-b475-f12c8fb664f1">overflow</a>
        <a href="https://stig-2021/Work/Drive2/af365ac2-1167-406a-8f15-a41e7ee0dc5b">normal</a>
        <a href="https://stig-2021/Work/Drive2/43334bd1-1cef-4317-86ba-364b475f3af7">i dag</a>
        <a href="https://stig-2021/Work/Drive2/af365ac2-1167-406a-8f15-a41e7ee0dc5b">* test *</a>
    </div>
    <div class="col-8 d-flex flex-column p-0" style="overflow: hidden scroll; font-size: 1.5rem;">
        @foreach (var row in Model.WorkTask.OrderBy(x => x.sortOrder).ThenBy(x => x.startDateTime))
        {
            var btnStartText = row.startDateTime.HasValue ? row.startDateTime.Value.ToHM() : row.WorkTaskType.btnStartText;
            var btnEndText = row.endDateTime.HasValue ? row.endDateTime.Value.ToHM() : row.WorkTaskType.btnEndText;
            rowPrev = row;

            <div id="@row.taskId" class="col shade p-2 task-row" data-sort-order="@row.sortOrder" data-type-id="@row.typeId">
                @if (row.startDateTime.HasValue)
                {
                    <span class="sdt">@row.startDateTime</span>
                }

                @if (row.endDateTime.HasValue)
                {
                    if (row.startDateTime.HasValue)
                    {
                        <span class="edt">@row.endDateTime.Value.ToHM()</span>
                    }
                    else
                    {
                        <span class="edt">@row.endDateTime</span>
                    }
                }

                @row.WorkTaskType.internalTitle
                @if (row.typeId > 200 && row.typeId < 300)
                {
                    var vt = row.vehicleText;
                    if (int.TryParse(row.vehicleText, out int vtId))
                    {
                        vt = Common.WorkVehicles.Single(x => x.vehicleId == vtId).numberplate;
                    }
                    if (!string.IsNullOrEmpty(vt))
                    {
                        vt = vt.Substring(0, 2) + " " + vt.Substring(2, 2) + " " + vt.Substring(4);
                    }
                    <span>@vt</span>
                }
                else if (row.typeId == (int)WorkTaskTypeEnum.Arrivial)
                {
                    <span>@@ @row.addressSetup</span>
                }
            </div>
        }
    </div>
</div>
@section scripts {
    <script>
        var tapStart = 0;
        var tapTimer;
        var tapTime = 250;

        var touchMoveX;
        var touchMoveY;
        $(function (e) {
            //$('.task-row').on('touchmove', function (e) {
            //    touchMoveX = e.clientX;
            //    touchMoveY = e.clientY;

            //    e.preventDefault();
            //});
            //$('.task-row').on('touchend', function (e) {
            //    let newX = e.clientX;
            //    if (touchMoveX > newX) newX = newX * -1;
            //    let newY = e.clientY;
            //    if (touchMoveY > newY) newY = newY * -1;


            //});
            //$('.task-row').on('touchcancel', function (e) {
            //    clearTimeout(tapTimer);
            //});
            $(".task-row").on("touchmove", function (e) {
                $(".task-row").off("touchend");
                clearTimeout(tapTimer);
            });
            $('.task-row').on('touchend click', function (e) {
                let currentTime = new Date().getTime();
                let tapLength = currentTime - tapStart;
                var tapElm = $(this);

                e.preventDefault();
                clearTimeout(tapTimer);

                if (tapLength < tapTime && tapLength > 0) {
                    //Double Tap/Click
                    loadTask(tapElm.closest(".task-row"), true);
                } else {
                    //Single Tap/Click code here
                    tapTimer = setTimeout(function () {
                        loadTask(tapElm.closest(".task-row"));
                        clearTimeout(tapTimer);
                    }, tapTime);
                }
                tapStart = currentTime;
                touchMoveY = e.clientY;
            });
            //$(".task [skd-cmd='add-before'], [skd-cmd='add-after']").on("click", function (e) {
            //    let task = $(this).closest(".task");
            //    let taskId = task.attr("id");
            //    let sortOrder = Number(task.attr("data-sort-order")) + ($(this).attr("skd-cmd") == "add-before" ? -1 : 1);
            //    let typeId = Number(task.attr("data-type-id"));
            //    console.log(taskId + ": " + typeId + " (" + sortOrder + ")");

            //    e.preventDefault();
            //    e.stopPropagation();
            //    return false;
            //});

            //$("link[rel=icon]").attr("href", "/Content/Images/driver.ico");

            //Skd.Form.Init(true);

            //$("left, header, footer").css("display", "none!important");
        });

        function loadTask(elm, asEdit = false) {
            //elm.blur();
            $("#task-info, .task-row").removeClass("active");
            $("#task-info, .task-row").removeClass("active-edit");
            if (asEdit) {
                $("#task-info, #" + elm.attr("id")).addClass("active-edit");
            } else {
                $("#task-info, #" + elm.attr("id")).addClass("active");
            }

            $("#task-info").html(elm.html() + "<br /><br />asEdit: " + asEdit);
        }
    </script>
}
@section styles {
    <style>
        /*.text-small {
            font-size: .8rem;
        }

        .task > .d-flex > :not(:last-child) {
            padding-left: 0;
            padding-right: .25rem;
        }

        .task > .d-flex > :last-child {
            padding-left: 0;
            padding-right: 0;
        }

        .cmd, .cmd [skd-cmd='Zedit'],
        .address, .vehicle, .remark, .setup, .cmd {
            width: 100%;
        }

        @@media only screen and (min-width: 576px) {
            .cmd, .cmd [skd-cmd='Zedit'],
            .address, .vehicle, .remark, .setup, .cmd {
                width: auto;
            }
        }

        .active .address, .active .vehicle, .active .cmd {
            font-size: 3rem;
        }*/
    </style>
}