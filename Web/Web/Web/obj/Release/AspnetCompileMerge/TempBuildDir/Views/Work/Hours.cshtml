@{
    ViewBag.Title = "Work Hours Overview";
    ViewBag.Icon = "clock";
    TimeSpan weeklyTime = new TimeSpan(0, 0, 0);

    // ***** Holidays *****
    List<Skd.Date.Holiday> holidays = Skd.Date.Holidays();
}
<div class="d-flex mb-3">
    <div class="col-auto input-group input-group-sm w-auto">
        <div class="input-group-text">Months</div>
        <button class="btn btn-sm btn-danger">2</button>
        <button class="btn btn-sm btn-success">3</button>
    </div>
    <div class="col">
        @Skd.Web.Form.Controls.ButtonToggle(new Form.ButtonToggle() { Id = "btn_showTotals", Title = "Totals", Icon = "fas fa-plus", Background = Enumeration.BootstrapStyle.Success, OffTitle = "Totals", OffIcon = "fas fa-plus", OffBackground = Enumeration.BootstrapStyle.Danger })
    </div>
</div>
<div class="d-flex calendar">
    @for (var monthNo = DateTime.Now.Month - 1; monthNo <= DateTime.Now.Month + 1; monthNo++)
    {
        var startDate = new DateTime(DateTime.Now.Year, monthNo, 1, 0, 0, 0);
        var endDate = startDate.AddMonths(1).AddSeconds(-1);
        var workList = new List<Work>();
        using (var db = new Db())
        {
            var tempEndDate = endDate.AddDays(1);
            workList = db.Work.Where(x => x.startDateTime > startDate && x.endDateTime < tempEndDate).ToList();
        }
        <div class="col-12 col-lg-6 month@(monthNo == DateTime.Now.Month ? " pe-0 pe-lg-3" : "")">
            <div class="d-flex bg-dark text-light month-header">
                <div class="col ps-3">
                    @startDate.ToString("MMMM yyyy")
                </div>
                <div class="col-auto pe-3">
                </div>
            </div>
            @for (var dayNo = 1; dayNo <= endDate.Day; dayNo++)
            {
                var date = new DateTime(startDate.Year, monthNo, dayNo);
                if (date.DayOfWeek == DayOfWeek.Monday)
                {
                    weeklyTime = new TimeSpan(0, 0, 0);
                    @*<div class="">Nu starter en ny uge</div>*@
                }

                var isHoliday = false;
                isHoliday = (date.DayOfWeek == DayOfWeek.Saturday || date.DayOfWeek == DayOfWeek.Sunday || Skd.Date.Holiday.IsHoliday(date));
                <div class="shade d-flex flex-row @(date.ToYMD() == DateTime.Now.ToYMD() ? " active" : "") day @(isHoliday ? "holiday": "")">
                    <div class="col-auto ps-1 date">
                        @date.ToString("ddd dd")
                    </div>
                    <div class="col d-flex flex-column pe-1 text">
                        @foreach (var row in workList.Where(x => x.startDateTime > date && x.startDateTime < date.AddDays(1)))
                        {
                            var statusCss = row.status != 250 ? "bg-opacity-50" : "";
                            weeklyTime += (row.endDateTime.Value - row.startDateTime.Value);
                            var workTime = new DateTime((row.endDateTime.Value - row.startDateTime.Value).Ticks);
                            <div class="col-12 d-flex flex-row">
                                <div class="col-auto">
                                    <a href="/Work/Drive/@row.workId"><span class="fas fa-truck-moving text-warning"></span></a>
                                    <a href="/Work/Edit/@row.workId"><span class="fas fa-edit text-success"></span></a>
                                </div>
                                <div class="col-auto px-1 me-0 btn-success @statusCss">@row.startDateTime.Value.ToHM()</div>
                                <div class="col-auto px-1 btn-danger @statusCss">@row.endDateTime.Value.ToHM()</div>
                                <div class="col-auto px-1 btn-info @statusCss">@workTime.ToHM()</div>
                                <div class="col text-truncate" title="@row.remark">@row.remark</div>
                            </div>
                        }
                    </div>
                    @if (date.DayOfWeek == DayOfWeek.Monday)
                    {
                        <div class="col-auto px-1 week bg-dark text-light">@date.WeekOfYear()</div>
                    }
                </div>
                if (date.DayOfWeek == DayOfWeek.Sunday)
                {
                    <div class="date text-center bg-warning text-dark">@string.Format("{0:N0}:{1}", weeklyTime.TotalHours - 1, ("00" + weeklyTime.Minutes).Right(2))</div>
                }
            }
        </div>
    }
</div>
@section scripts {
    <script>
        $(function (e) {
        });
    </script>
}
@section styles {
    <style>
        .month-header {
            flex-direction: row !important;
            align-items: center !important;
            min-height: 36px;
            font-weight: bold;
            font-size: 1.4rem;
        }

        .day {
            min-height: 22px;
            align-items: start;
        }

            .day .text {
                align-self: center;
                overflow: hidden;
            }

                .day .text .flex-row > :not(:last-child) {
                    padding: 0;
                    margin-right: .25rem;
                }

        .date, .week {
            font-family: monospace;
            font-size: .8rem;
            vertical-align: top;
        }

        .date {
            padding-right: .25rem;
        }

        .holiday {
            background: var(--bs-gray-500) !important;
        }
    </style>
}
