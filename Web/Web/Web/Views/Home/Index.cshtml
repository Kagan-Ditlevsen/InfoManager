@{
    ViewBag.Title = "Dashboard";
    ViewBag.Icon = "Home";

    var listTypes = Common.DailyTypes.Where(x => x.isActive).OrderByDescending(x => x.isFavorite).ThenBy(x => x.sortOrder);
    var showFavoriteChangeLine = true;
}
<div class="d-flex">
    <div id="quick-buttons" class="skd-table col-12 col-lg-3">
        <div class="card card-sm quick-add skd-content-loader-show">
            <img class="skd-content-loader" src="~/Content/Images/loader-circle.gif" />
            <div class="card-header">
                <div class="col-auto pe-1"><span class="fas fa-puzzle-piece"></span></div>
                <div class="col">Quick Action</div>
            </div>
            <div class="card-body skd-table mb-1">
                @foreach (var type in listTypes)
                {
                    var btnColor = type.DailyTypeExtra.Count() > 0 ? "danger" : "warning";
                    var btnTitle = type.internalTitle;
                    if (type.defaultOptionId.HasValue)
                    {
                        btnTitle += ", " + Common.DailyTypeOptions.Single(x => x.optionId == type.defaultOptionId).internalTitle;
                    }
                    if (!type.isFavorite && showFavoriteChangeLine)
                    {
                        showFavoriteChangeLine = false;
                        <div class="skd-table-row quick-add-row">
                            <div class="col btn-group">
                                <button id="btn_show_all_actions" class="btn btn-sm btn-grey btn-quick-add">
                                    <div class="d-flex">
                                        <div class="col-auto"><span class="fas fa-arrow-circle-down"></span></div>
                                        <div class="col text-center">Show all</div>
                                        <div class="col-auto"><span class="fas fa-arrow-circle-down"></span></div>
                                    </div>
                                </button>
                            </div>
                        </div>
                    }
                    <div class="skd-table-row quick-add-row@(type.isFavorite ? "" : " hide")" data-type-id="@type.typeId" data-option-id="@type.defaultOptionId" data-extra-info="@(type.DailyTypeExtra.Count() > 0 ? "true" : "false")" data-is-favorite="@type.isFavorite.ToString().ToLower()">
                        <div class="col btn-group">
                            <button class="btn btn-sm btn-@btnColor btn-quick-add">
                                <div class="d-flex">
                                    <div class="col-auto pe-1"><span class="fas fa-bolt"></span></div>
                                    <div class="col">@btnTitle</div>
                                    <div class="col-auto">@type.Icon()</div>
                                </div>
                            </button>
                            @if (type.DailyTypeExtra.Count() == 0)
                            {
                                <button class="btn btn-sm btn-success btn-quick-sidebar">
                                    <div class="d-flex">
                                        <div class="col">@type.internalTitle</div>
                                        <div class="col-auto">@type.Icon()</div>
                                    </div>
                                </button>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <div id="dailyEntries" class="col-12 col-lg">
        @{
            int filter_days = 2;
            bool header_show = true;

            List<vw_Daily_Days> dayList = new List<vw_Daily_Days>();
            using (var db = new Db())
            {
                dayList = db.vw_Daily_Days.Where(x => x.createUserId == Common.User.userId && x.typeId == 9001).OrderByDescending(x => x.startDateTime).Take(filter_days).ToList();
            }

            List<Daily> dailies = Daily.Overview(Common.User.userId)
                .Where(x => x.registerDateTime >= dayList.Min(y => y.startDateTime))
                .ToList();
        }
        <div class="card skd-table skd-content-loader-show">
            <img class="skd-content-loader" src="~/Content/Images/loader-circle.gif" />
            <div class="card-header">
                <div class="col pr-1 ellipsis"><span class="fas fa-list-ol"></span> List of todays entries</div>
                @Table.Controls.Search()
            </div>
            <div class="card-body">
                @foreach (var day in dayList)
                {
                    string edt = "Still up";
                    string dayTitle = "Today";
                    if (!day.endDateTime.HasValue)
                    {
                        day.endDateTime = DateTime.Now;
                    }
                    else
                    {
                        edt = day.endDateTime.Value.ToYMDHM();
                        dayTitle = day.startDateTime.ToString("dddd").ToUpper();
                    }
                    if (header_show)
                    {
                        <div class="skd-table-header">
                            <div class="col-auto"><span class="fas @Icon.Goodmorning"></span> @day.startDateTime.ToYMDHM()</div>
                            <div class="col text-center">@dayTitle</div>
                            <div class="col-auto" style="text-align: right;">@edt <span class="fas @Icon.Goodnight"></span></div>
                        </div>
                    }
                    foreach (var row in dailies.Where(x => x.registerDateTime >= day.startDateTime && x.registerDateTime <= day.endDateTime).OrderByDescending(x => x.registerDateTime))
                    {
                        <div class="skd-table-row shade" skd-sidebar-url="/Daily/Sidebar_DailyAdd" skd-sidebar-data="dailyId=@row.dailyId">
                            <div class="col-auto">
                                @row.registerDateTime.ToHM()
                            </div>
                            <div class="col">
                                @row.Title()
                            </div>
                            <div class="col-auto">
                                @row.InfoesAsString()
                            </div>
                            @if (!string.IsNullOrEmpty(row.remark))
                            {
                                <div class="col-auto"><span class="fas @Icon.Comment text-warning ps-1" title="@row.remark"></span></div>
                            }
                        </div>
                    }
                }
            </div>
            <div class="card-footer flex-column p-0 text-sm">
                <div class="skd-table w-100">
                    @foreach (var i in new[] { 9503, 1011, 1017 })
                    {
                        try
                        {
                            var s = Common.User.Stat.RetrieveAsOptionGroup(i);
                            <div class="skd-table-row">
                                <div class="col">
                                    <strong><u>@s.typeTitle</u></strong>: @s.StatusText()
                                </div>
                            </div>
                        }
                        catch { }
                    }
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts {
    <script>
        var form = "#pageForm";
        $(function (e) {
            $(".btn-quick-add").on("click", function (e) {
                let typeId = $(this).parent().parent().attr("data-type-id");
                let optionId = $(this).parent().parent().attr("data-option-id");

                if (typeof typeId !== "undefined") {
                    let extraInfo = $(this).parent().parent().attr("data-extra-info") == "true";
                    if (extraInfo) {
                        skd_sidebar_load_content("/Daily/Sidebar_DailyAdd", "typeId=" + typeId + "&optionId=" + optionId);
                    } else {
                        Skd.PageLoading("Adding Event...");

                        $.ajax({
                            type: "POST",
                            url: "/Daily/Daily_AddEdit",
                            data: { typeId: typeId, optionId: optionId, rUrl: "/" }
                        })
                            .done(function (data) {
                                location.reload(true);
                            })
                            .fail(function (jqXHR, textStatus, errorThrown) {
                                $("body").html(jqXHR.responseText);
                            });
                    }
                }
            });
            $(".btn-quick-sidebar").on("click", function (e) {
                let typeId = $(this).parent().parent().attr("data-type-id");
                let extraInfo = $(this).parent().parent().attr("data-extra-info") == "true";
                skd_sidebar_load_content("/Daily/Sidebar_DailyAdd", "typeId=" + typeId + "&optionId=0");
            });

            $("#btn_show_all_actions").on("click", function (e) {
                $(".skd-table-row[data-is-favorite='false']").removeClass("hide");
                $(this).parent().parent().remove();
            });
        });
    </script>
}
@section styles {
    <style>
        #dailyEntries .card-footer .skd-table :not(:first-child) {
            padding-top: 0;
        }

        .skd-table .skd-table-header:not(:first-child):not(.simple) { /* override Skd.Table */
            margin-top: .25rem;
        }

        .quick-add-row {
            padding-bottom: 0 !important;
        }

            .quick-add-row button .d-flex {
                flex-direction: row;
            }

            .quick-add-row button .col {
                padding-left: .25rem;
                padding-right: .25rem;
                text-align: left;
            }

            .quick-add-row button .col-auto {
                padding: 0;
            }

        @@media only screen and (max-width: 576px) {
            .quick-add-row .col {
                flex-direction: column;
                align-items: flex-start;
                justify-content: center;
            }

                .quick-add-row .col button {
                    width: 100%;
                }

                    .quick-add-row .col button.btn-warning {
                        border-radius: .5rem .5rem 0 0 !important;
                    }

                    .quick-add-row .col button.btn-success {
                        border-radius: 0 0 .5rem .5rem !important;
                    }
        }
    </style>
}