@using Skd;
@model InfoMan.ViewModels.Daily_DailyList
@{
    int rowNo = 1;
    int qtyDays = 1;
    if (Session["dailyList_qty"] == null)
    {
        Session["dailyList_qty"] = Model.ShowQty;
    }

    var dailyList = new List<vw_Daily_Overview>();
    var extrasList = new List<Daily>();
    using (var db = new Db())
    {
        dailyList = db.vw_Daily_Overview
            //.Where(x => x.createUserId == Common.User.userId && x.registerDateTime > new DateTime(2021, 1, 1) && x.typeId == 9013)
            .Where(x => x.createUserId == Common.User.userId)
            .OrderByDescending(x => x.registerDateTime)
            .ThenByDescending(x => x.createDateTime)
            .Take(int.Parse(Session["dailyList_qty"].ToString()))
            .ToList();
        Guid[] dailyIds = dailyList.Select(y => y.dailyId).ToArray();
        extrasList = db.Daily.Include("DailyInfo").Include("DailyInfo.DailyTypeExtra").Where(x => dailyIds.Contains(x.dailyId)).ToList();
    }
    Session.Remove("dailyList_qty");
}
<div id="dailyList" class="card card-sm skd-table skd-content-loader-show">
    <img class="skd-content-loader" src="~/Content/Images/loader-circle.gif" />
    <div class="card-header @(Model.ShowFilter ? "border-bottom-0" : "")">
        <div class="col pr-1 ellipsis"><span class="fas fa-list-ol"></span> List of Daily Entries (_DailyList)</div>
        @Table.Controls.Search()
    </div>
    @if (Model.ShowFilter)
    {
    <div class="card-header flex-md-column px-1 pt-0">
        @Form.Controls.Text(new Form.Text() { HelpText = "placeholder for controls regarding filtering", ControlOnly = true, ContainerClass = " w-100", Disabled = true })
    </div>
    }
    <div class="card-body skd-table">
        @{
            string oldGroup = "";
            foreach (var elm in dailyList)
            {
                string dummyIconCss = Common.DailyTypes.First(x => x.typeId == elm.typeId).iconCss;
                if (oldGroup != elm.registerDateTime.ToYMD())
                {
                    oldGroup = elm.registerDateTime.ToYMD();
                    string headerTitle = elm.registerDateTime.ToString("dddd d. MMMM yyyy");
                    headerTitle = headerTitle.Substring(0, 1).ToUpper() + headerTitle.Substring(1);
            <div class="skd-table-header">
                <div class="col">@headerTitle</div>
                <div class="col-auto"><button skd-cmd="goto-stat-day" class="btn btn-sm btn-grey" onclick="Skd.PageLoading('Fetching stats...'); location.href = '/Daily/Stat/@oldGroup'; return false;"><span class="fas @Icon.Info"></span> Complete Stats</button></div>
            </div>
                }
                string elmTitle = elm.typeTitle + (elm.optionId.HasValue ? ", " + elm.optionTitle : "");
            <div class="skd-table-row shade align-items-stretch" data-id="@elm.dailyId" style="order: @(rowNo++)" skd-sidebar-url="/Daily/Sidebar_DailyAdd" skd-sidebar-data="dailyId=@elm.dailyId">
                <div class="col-auto pr-0 text-center" title="@elm.registerDateTime.ToYMDHM()">@elm.registerDateTime.ToHM()</div>
                <div class="col pl-1 pr-0 ellipsis" title="@elmTitle">
                    <span class="@dummyIconCss fa-fw"></span>
                    @elmTitle
                    @if (elm.extrasQty > 0)
                        {
                    <span class="badge bg-info" title="@extrasList.Single(x=>x.dailyId==elm.dailyId).InfoesAsString().ToString().Replace(", ", Environment.NewLine)">@elm.extrasQty</span>
                        }
                </div>
                @if (!string.IsNullOrEmpty(elm.remark))
                    {
                <div class="col-auto"><span class="fas @Icon.Comments text-warning pl-1" title="@elm.remark"></span></div>
                    }
                <div class="col-auto" title="Time since last event">
                    <span class="fas fa-arrow-circle-down"></span> @(elm.registerDateTime.ToDayHM(DateTime.Now, true))
                </div>
                <div class="col-auto" title="Quantity the last 24 hours">
                    <span class="fas fa-history"></span> @elm.qty24h.LeadingChar('0', 2)
                </div>
            </div>
            }
        }
    </div>
    @if (Model.ShowFooter)
    {
    <div class="card-footer p-1">
        <div class="col font-small">
            Footer
        </div>
    </div>
    }
</div>