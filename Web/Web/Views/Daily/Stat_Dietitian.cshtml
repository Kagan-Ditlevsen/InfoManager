@{
    DateTime d = DateTime.Parse(Skd.Web.Utils.RequestOrDefaultIfEmpty("start", DateTime.Now.AddDays(-7).ToYMD()));
    DateTime de = d.AddDays(8);
    ViewBag.Title = "Deititian Statistics from " + d.ToYMD() + " and 7 days ahead";

    List<vw_Daily_Days> dayList = new List<vw_Daily_Days>();
    List<Daily> dayListItems = new List<Daily>();
    int[] typesToInclude = { 1801, 9007, 1500, 9009, 9011, 9505, 9501, 1111 };
    int[] typesToStats = { 9503, 9007, 1500, 1801 };
    using (var db = new Db())
    {
        dayList = db.vw_Daily_Days.Where(x => x.startDateTime >= d && x.endDateTime <= de).ToList();
        dayListItems = db.Daily.Include("DailyType").Include("DailyInfo").Include("DailyInfo.DailyTypeExtra").Where(x => x.registerDateTime >= d && x.registerDateTime <= de && (typesToInclude.Contains(x.typeId) || typesToStats.Contains(x.typeId))).ToList();
    }
}
<div class="top-message alert alert-warning">
    <div class="d-flex align-items-center flex-column flex-md-row">
        <div class="col ps-2">Contact information: <span class="fas fa-user-nurse"></span> Louise <span class="fas fa-phone-alt"></span> 2365 3960</div>
        <div class="col-auto pe-1">
            @Form.Controls.DateTime(new Form.DateTime() { Id = "start", Value = d.ToYMD(), ControlOnly = true, DateTimeType = Form.DateTimeType.Date })
        </div>
        <div class="col-auto">
            @Form.Controls.Button(new Form.Button() { Id = "btn_print", Background = Skd.Web.Enumeration.BootstrapStyle.Dark, Icon = Icon.Print })
        </div>
    </div>
</div>
<div class="col-12 p-0">
    <div class="d-flex mt-1 mt-md-3">
        <div class="col-12 dayList">
            @foreach (var day in dayList.Where(x => x.typeId == 9001))
            {
                var tmpList = dayListItems.Where(x => x.registerDateTime > day.startDateTime && x.registerDateTime < day.endDateTime);
                <div class="card day">
                    <div class="card-header">
                        <div class="col-auto"><span class="fas fa-sun"></span> @day.startDateTime.ToYMDHM()</div>
                        <div class="col" style="text-align: center;">
                            @day.startDateTime.ToString("dddd").ToUpper()
                            @foreach (var statId in Common.DailyTypes.Where(x => typesToStats.Contains(x.typeId)))
                            {
                                if (statId.typeId == 1801)
                                {
                                    <span>
                                        @statId.Icon()
                                        @{
                                            int minutes = 0;

                                            foreach (var s in tmpList.Where(x => x.typeId == 1801).Select(x => x.DailyInfo.Where(y => y.extraId == 1)))
                                            {
                                                foreach (var t in s)
                                                {
                                                    minutes += int.Parse(t.entry);
                                                }
                                            }
                                        }
                                        @minutes min.
                                    </span>
                                }
                                else
                                {
                                    <span>@statId.Icon() @tmpList.Count(x => x.typeId == statId.typeId)</span>
                                }
                            }
                        </div>
                        <div class="col-auto">@day.endDateTime.Value.ToYMDHM() <span class="fas fa-moon"></span></div>
                    </div>
                    <div class="card-body skd-table">
                        @foreach (var dayItem in tmpList.Where(x => typesToInclude.Contains(x.typeId)).OrderBy(x => x.registerDateTime))
                        {
                            <div class="skd-table-row shade">
                                <div class="col-auto" style="width: 45px;">@dayItem.registerDateTime.ToHM()</div>
                                <div class="col">@dayItem.Title() @(!string.IsNullOrEmpty(dayItem.InfoesAsString().ToString()) ? "[" + dayItem.InfoesAsString() + "]" : "")</div>
                                <div class="col">@dayItem.remark</div>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>
@section scripts {
    <script>
        $(function () {
            $("#start_date").on("change", function (e) {
                Skd.PageLoading("Getting new data...");
                location.search = QueryString("start", $("#start_date").val());
            });
            $("[skd-cmd=datetime_clear]").on("click", function (e) {
                Skd.PageLoading("Getting new data...");
                location.search = QueryString("start", "");
            });
        });
    </script>
}
@section styles {
    <style>
        .card-header {
            background: linear-gradient( 90deg, rgba(255,255,0,1) 0%, rgba(255,255,255,1) 40%, rgba(255,255,255,1) 60%, rgba(128,128,128,1) 100%);
        }

        .dayList > :not(:first-child) {
            margin-top: 1rem;
        }
    </style>
}
